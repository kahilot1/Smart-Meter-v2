<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Electricity Meter Dashboard</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script>
    // Make cards array available in the browser from server-side EJS
    const cards = <%- JSON.stringify(cards) %>;
    
    async function fetchAndUpdateData(speed) {
      try{
        let response = null;
        const option = "<%= option %>";
        if (option == "kWh"){
          response = await fetch("/api/kWh/" + speed);
        }
        else if (option == "monetary") {
          response = await fetch("/api/monetary/" + speed);
        }

        if (!response.ok) {
          throw new Error('Network response was not ok');
        }

        const data = await response.json();
        // Update card values
        Object.entries(data).forEach(([key, value]) => {
          const card = document.getElementById(key);
          const unit = cards.find(card => card.id === key)?.unit || '';
          if (card) {
            if (unit == "kWh"){
              card.querySelector('p').textContent = value + " " + unit;
            }
            else{
              card.querySelector('p').textContent = unit + " " + value;
            }
            
          }
        });

        // Update chart data
        if (speed === "slow"){
          const getChartResponse = await fetch("/api/chartData/" + option);
          if (!getChartResponse.ok) {
            throw new Error('Network response was not ok');
          }
          const getChartData = await getChartResponse.json();
          
          // Update chart with new data

          const chartData = getChartData || { values: [], labels: [], unit: '' };
          window.usageChart.data.datasets[0].data = chartData.values;
          window.usageChart.data.labels = chartData.labels;
          window.usageChart.data.datasets[0].label = 'Electricity Usage (' + chartData.unit + ')';
          window.usageChart.update();
        }

      }catch (error) {
        console.error('Error fetching data:', error);
      }
    }
  fetchAndUpdateData("slow");
  // Update data every 30 minutes
  setInterval(() => {
    fetchAndUpdateData("slow");
  }, 1800000); // 30 minutes in milliseconds

  fetchAndUpdateData("fast");
  // Update data every 2 seconds
  setInterval(() => {
    fetchAndUpdateData("fast");
  }, 2000);

</script>

  <style>
    body {
      background-color: #f4f6f9;
    }
    .card {
      border-radius: 20px;
      box-shadow: 0 4px 12px rgba(0,0,0,0.1);
      margin-bottom: 20px;
      transition: transform 0.2s ease;
    }
    .card:hover {
      transform: scale(1.02);
    }
    .card h5 { font-size: 1.2rem; }
    .card p { font-size: 1.6rem; font-weight: bold; }
    @media (min-width: 768px) {
      .card { padding: 2rem; }
      .card h5 { font-size: 1.4rem; }
      .card p { font-size: 2rem; }
    }
  </style>
</head>
<body>
  <div class="container text-center mt-5">
    <h1 class="mb-4">âš¡ Electricity Meter Dashboard</h1>

    <div class="row justify-content-center">
      <% cards.forEach(card => { %>
        <div class="col-12 col-sm-6 col-md-4 col-lg-3">
          <div class="card p-3" id=<%= card.id %>>
            <h5><%= card.title %></h5>
            <p><%= card.value %></p>
          </div>
        </div>
      <% }) %>
    </div>

    <!-- Chart Section -->
    <div class="row justify-content-center my-5">
      <div class="col-12 col-md-8">
        <canvas id="usageChart"></canvas>
      </div>
    </div>

    <!-- Button -->
    <a href="<%= linkVal %>" class="btn btn-primary btn-lg mt-3"><%= linkText%></a>
  </div>

  <script>
    const ctx = document.getElementById('usageChart').getContext('2d');
    window.usageChart = new Chart(ctx, {
      type: 'line',
      data: {
        labels: <%- JSON.stringify(chartData.labels) %>,
        datasets: [{
          label: 'Electricity Usage (<%= chartData.unit %>)',
          data: <%- JSON.stringify(chartData.values) %>,
          fill: false,
          borderColor: 'rgba(75, 192, 192, 1)',
          tension: 0.2
        }]
      },
      options: {
        responsive: true,
        plugins: {
          legend: {
            display: true,
            position: 'top'
          }
        },
        scales: {
          y: {
            beginAtZero: true
          }
        }
      }
    });
  </script>
</body>
</html>
